// Generated by CoffeeScript 1.7.1
(function() {
  var Otalvaro, root,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  root = typeof window !== "undefined" && window !== null ? window : global;

  Otalvaro = root.Otalvaro;

  Otalvaro.Views.SliderCover = (function(_super) {
    __extends(SliderCover, _super);

    function SliderCover() {
      this.updateSliderCover = __bind(this.updateSliderCover, this);
      return SliderCover.__super__.constructor.apply(this, arguments);
    }

    SliderCover.prototype.el = '#sliderCover';

    SliderCover.prototype.initialize = function() {
      this.collapsed = true;
      this.collapsedHeight = 30;
      this.$slider = this.$el.children();
      this.getSliderHeight();
      return $(window).on('resize', this.updateSliderCover);
    };

    SliderCover.prototype.collapse = function() {
      if (!this.collapsed) {
        this.$el.css('height', "" + this.collapsedHeight + "px");
        return this.collapsed = true;
      }
    };

    SliderCover.prototype.expand = function(expandUpdate) {
      if (expandUpdate == null) {
        expandUpdate = false;
      }
      if (this.collapsed || expandUpdate) {
        this.$el.css('height', this.height);
        return this.collapsed = false;
      }
    };

    SliderCover.prototype.getSliderHeight = function() {
      var sliderHeight;
      sliderHeight = this.$slider.height();
      return this.height = sliderHeight === 0 ? "" + this.collapsedHeight + "px" : "" + sliderHeight + "px";
    };

    SliderCover.prototype.resetHeight = function() {
      return this.getSliderHeight();
    };

    SliderCover.prototype.updateSliderCover = function() {
      this.resetHeight();
      if (!this.collapsed) {
        return this.expand(true);
      }
    };

    return SliderCover;

  })(Backbone.View);

}).call(this);

//# sourceMappingURL=sliderCover.map
